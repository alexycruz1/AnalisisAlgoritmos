/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoaa;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.view.View;
import org.graphstream.ui.view.Viewer;

/**
 *
 * @author Alexy
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setLocationRelativeTo(null);

        Viewer viewer = graph.display(true);
        View view = viewer.getDefaultView();
        jp_showGraph.add((Component) view);

        Viewer viewer_color = KCgraph.display(true);
        View view_color = viewer_color.getDefaultView();
        jp_showGraph1.add((Component) view_color);

        Viewer viewer_tsp = tspGraph.display(true);
        View view_tsp = viewer_tsp.getDefaultView();
        jp_showGraph3.add((Component) view_tsp);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_Knapsack = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jt_valorKnapsack = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jt_pesoKnapsack = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta_ValoresIngresados = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jt_capacidadMochilas = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jl_timeElapsed_Knapsack = new javax.swing.JLabel();
        jd_VertexCover = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jt_Vertice_VertexCover = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jt_Vertice1_VertexCover = new javax.swing.JTextField();
        jt_Vertice2_VertexCover = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jp_showGraph = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jl_timeElapsed_VertexCover = new javax.swing.JLabel();
        jd_kcoloreabilidad = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jt_Vertice_color = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jt_Vertice1_color = new javax.swing.JTextField();
        jt_Vertice2_color = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jp_showGraph1 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jl_timeElapsed_color = new javax.swing.JLabel();
        jd_tsp = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jt_Vertice1_tsp = new javax.swing.JTextField();
        jt_Vertice2_tsp = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jp_showGraph3 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jl_timeElapsed_color1 = new javax.swing.JLabel();
        jt_peso_tsp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jb_Coloreabilidad = new javax.swing.JButton();
        jb_VertexCover = new javax.swing.JButton();
        jb_tsp = new javax.swing.JButton();
        jb_Knapsack = new javax.swing.JButton();
        jl_SetImage = new javax.swing.JLabel();

        jLabel1.setText("Valor");

        jLabel2.setText("Peso");

        jta_ValoresIngresados.setColumns(20);
        jta_ValoresIngresados.setRows(5);
        jScrollPane1.setViewportView(jta_ValoresIngresados);

        jButton1.setText("Correr Knapsack");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel3.setText("Capacidad mochila");

        jButton2.setText("Agregar paquete");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jl_timeElapsed_Knapsack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_timeElapsed_Knapsack.setText("Tiempo Transcurrido");

        javax.swing.GroupLayout jd_KnapsackLayout = new javax.swing.GroupLayout(jd_Knapsack.getContentPane());
        jd_Knapsack.getContentPane().setLayout(jd_KnapsackLayout);
        jd_KnapsackLayout.setHorizontalGroup(
            jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_KnapsackLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jd_KnapsackLayout.createSequentialGroup()
                        .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_KnapsackLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jt_capacidadMochilas, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2)
                            .addGroup(jd_KnapsackLayout.createSequentialGroup()
                                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jt_valorKnapsack)
                                    .addComponent(jt_pesoKnapsack, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jd_KnapsackLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(jl_timeElapsed_Knapsack, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jd_KnapsackLayout.setVerticalGroup(
            jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_KnapsackLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jt_valorKnapsack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jt_pesoKnapsack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jt_capacidadMochilas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_KnapsackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jl_timeElapsed_Knapsack))
                .addContainerGap())
        );

        jLabel4.setText("Vertice");

        jLabel5.setText("Arista");

        jButton3.setText("Agregar vertice");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Agregar arista");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_showGraphLayout = new javax.swing.GroupLayout(jp_showGraph);
        jp_showGraph.setLayout(jp_showGraphLayout);
        jp_showGraphLayout.setHorizontalGroup(
            jp_showGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_showGraphLayout.setVerticalGroup(
            jp_showGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );

        jButton5.setText("Correr Vertex Cover");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jl_timeElapsed_VertexCover.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_timeElapsed_VertexCover.setText("Tiempo Transcurrido");

        javax.swing.GroupLayout jd_VertexCoverLayout = new javax.swing.GroupLayout(jd_VertexCover.getContentPane());
        jd_VertexCover.getContentPane().setLayout(jd_VertexCoverLayout);
        jd_VertexCoverLayout.setHorizontalGroup(
            jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_showGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                        .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(31, 31, 31)
                        .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jt_Vertice_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_Vertice1_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5))
                            .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                                .addComponent(jt_Vertice2_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                                .addComponent(jl_timeElapsed_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jd_VertexCoverLayout.setVerticalGroup(
            jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jt_Vertice_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)))
                    .addGroup(jd_VertexCoverLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton5)))
                .addGap(32, 32, 32)
                .addGroup(jd_VertexCoverLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jt_Vertice1_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_Vertice2_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jl_timeElapsed_VertexCover))
                .addGap(18, 18, 18)
                .addComponent(jp_showGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel9.setText("Vertice");

        jLabel10.setText("Arista");

        jButton8.setText("Agregar vertice");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Agregar arista");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jp_showGraph1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jp_showGraph1Layout = new javax.swing.GroupLayout(jp_showGraph1);
        jp_showGraph1.setLayout(jp_showGraph1Layout);
        jp_showGraph1Layout.setHorizontalGroup(
            jp_showGraph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_showGraph1Layout.setVerticalGroup(
            jp_showGraph1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );

        jButton10.setText("Correr K Coloreabilidad");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jl_timeElapsed_color.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_timeElapsed_color.setText("Tiempo Transcurrido");

        javax.swing.GroupLayout jd_kcoloreabilidadLayout = new javax.swing.GroupLayout(jd_kcoloreabilidad.getContentPane());
        jd_kcoloreabilidad.getContentPane().setLayout(jd_kcoloreabilidadLayout);
        jd_kcoloreabilidadLayout.setHorizontalGroup(
            jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_showGraph1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                        .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(31, 31, 31)
                        .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jt_Vertice_color, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jt_Vertice1_color, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton10))
                            .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                                .addComponent(jt_Vertice2_color, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                                .addComponent(jl_timeElapsed_color, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jd_kcoloreabilidadLayout.setVerticalGroup(
            jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jt_Vertice_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8)))
                    .addGroup(jd_kcoloreabilidadLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton10)))
                .addGap(32, 32, 32)
                .addGroup(jd_kcoloreabilidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jt_Vertice1_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_Vertice2_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jl_timeElapsed_color))
                .addGap(18, 18, 18)
                .addComponent(jp_showGraph1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel12.setText("Arista");

        jButton11.setText("Agregar vertice");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Agregar arista");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jp_showGraph3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jp_showGraph3Layout = new javax.swing.GroupLayout(jp_showGraph3);
        jp_showGraph3.setLayout(jp_showGraph3Layout);
        jp_showGraph3Layout.setHorizontalGroup(
            jp_showGraph3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jp_showGraph3Layout.setVerticalGroup(
            jp_showGraph3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );

        jButton13.setText("Correr TSP");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jl_timeElapsed_color1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_timeElapsed_color1.setText("Tiempo Transcurrido");

        jLabel6.setText("Vertice");

        jLabel7.setText("Vertice");

        jLabel8.setText("Peso");

        javax.swing.GroupLayout jd_tspLayout = new javax.swing.GroupLayout(jd_tsp.getContentPane());
        jd_tsp.getContentPane().setLayout(jd_tspLayout);
        jd_tspLayout.setHorizontalGroup(
            jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_tspLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_showGraph3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jd_tspLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(36, 36, 36)
                        .addComponent(jt_Vertice1_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jt_peso_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jt_Vertice2_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton12)
                        .addGap(124, 124, Short.MAX_VALUE)
                        .addComponent(jl_timeElapsed_color1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_tspLayout.createSequentialGroup()
                        .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jButton11))
                        .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_tspLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel8)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_tspLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton13)
                                .addGap(21, 21, 21)))))
                .addContainerGap())
        );
        jd_tspLayout.setVerticalGroup(
            jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_tspLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton11))
                .addGap(23, 23, 23)
                .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_tspLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jt_Vertice1_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jt_Vertice2_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12)
                    .addComponent(jl_timeElapsed_color1)
                    .addComponent(jt_peso_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jp_showGraph3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jb_Coloreabilidad.setText("K-Coloreabilidad en grafos");
        jb_Coloreabilidad.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jb_ColoreabilidadMouseMoved(evt);
            }
        });
        jb_Coloreabilidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_ColoreabilidadMouseClicked(evt);
            }
        });

        jb_VertexCover.setText("Cobertura de vertices");
        jb_VertexCover.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jb_VertexCoverMouseMoved(evt);
            }
        });
        jb_VertexCover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_VertexCoverMouseClicked(evt);
            }
        });

        jb_tsp.setText("TSP");
        jb_tsp.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jb_tspMouseMoved(evt);
            }
        });
        jb_tsp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_tspMouseClicked(evt);
            }
        });

        jb_Knapsack.setText("Knapsack");
        jb_Knapsack.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jb_KnapsackMouseMoved(evt);
            }
        });
        jb_Knapsack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_KnapsackMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_Knapsack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_tsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_VertexCover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Coloreabilidad, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addComponent(jl_SetImage, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jl_SetImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_Coloreabilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jb_VertexCover, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jb_tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(jb_Knapsack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_ColoreabilidadMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ColoreabilidadMouseMoved
        try {
            // TODO add your handling code here:
            File ArchivoImagen = new File("./src/Imagenes/Coloreabilidad.png");
            BufferedImage img = ImageIO.read(ArchivoImagen);
            Image scaled = img.getScaledInstance(500, 500, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            jl_SetImage.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_ColoreabilidadMouseMoved

    private void jb_VertexCoverMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_VertexCoverMouseMoved
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            File ArchivoImagen = new File("./src/Imagenes/VertexCover.jpg");
            BufferedImage img = ImageIO.read(ArchivoImagen);
            Image scaled = img.getScaledInstance(500, 500, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            jl_SetImage.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_VertexCoverMouseMoved

    private void jb_tspMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_tspMouseMoved
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            File ArchivoImagen = new File("./src/Imagenes/Clique.png");
            BufferedImage img = ImageIO.read(ArchivoImagen);
            Image scaled = img.getScaledInstance(500, 500, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            jl_SetImage.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_tspMouseMoved

    private void jb_KnapsackMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_KnapsackMouseMoved
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            File ArchivoImagen = new File("./src/Imagenes/Knapsack.png");
            BufferedImage img = ImageIO.read(ArchivoImagen);
            Image scaled = img.getScaledInstance(500, 500, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            jl_SetImage.setIcon(icon);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jb_KnapsackMouseMoved

    private void jb_KnapsackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_KnapsackMouseClicked
        // TODO add your handling code here:
        jd_Knapsack.setModal(true);
        jd_Knapsack.pack();
        jd_Knapsack.setLocationRelativeTo(this);
        jd_Knapsack.setVisible(true);
    }//GEN-LAST:event_jb_KnapsackMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        ValoresVisibles = "";

        Valores.add(Integer.parseInt(jt_valorKnapsack.getText()));
        Pesos.add(Integer.parseInt(jt_pesoKnapsack.getText()));

        for (int i = 0; i < Valores.size(); i++) {
            ValoresVisibles += "Valor = " + Valores.get(i) + ", Peso = " + Pesos.get(i) + "\n";
        }

        jta_ValoresIngresados.setText(ValoresVisibles);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        long startTime = System.nanoTime();
        Knapsack();
        long estimatedTime = System.nanoTime() - startTime;

        String TiempoTranscurrido = Long.toString(estimatedTime) + " milisegundos";

        jl_timeElapsed_Knapsack.setText(TiempoTranscurrido);

        jta_ValoresIngresados.setText(ValoresVisibles);
    }//GEN-LAST:event_jButton1MouseClicked

    private void jb_VertexCoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_VertexCoverMouseClicked
        // TODO add your handling code here:
        jd_VertexCover.setModal(true);
        jd_VertexCover.pack();
        jd_VertexCover.setLocationRelativeTo(this);
        jd_VertexCover.setVisible(true);

        //jp_showGraph.setMaximumSize(new Dimension(5000, 300));
    }//GEN-LAST:event_jb_VertexCoverMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Node n = graph.addNode(jt_Vertice_VertexCover.getText());
        n.addAttribute("ui.label", jt_Vertice_VertexCover.getText());

        Vertices.add(Integer.parseInt(jt_Vertice_VertexCover.getText()));

        JOptionPane.showMessageDialog(jd_VertexCover, "Nodo " + jt_Vertice_VertexCover.getText() + " creado exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Edge e = graph.addEdge(jt_Vertice1_VertexCover.getText() + jt_Vertice2_VertexCover.getText(), jt_Vertice1_VertexCover.getText(), jt_Vertice2_VertexCover.getText());
        e.addAttribute("ui.label", jt_Vertice1_VertexCover.getText() + jt_Vertice2_VertexCover.getText());

        Arista nuevaArista = new Arista(jt_Vertice1_VertexCover.getText() + jt_Vertice2_VertexCover.getText(), Integer.parseInt(jt_Vertice1_VertexCover.getText()), Integer.parseInt(jt_Vertice2_VertexCover.getText()));
        Aristas.add(nuevaArista);

        JOptionPane.showMessageDialog(jd_VertexCover, "Arista " + jt_Vertice1_VertexCover.getText() + jt_Vertice2_VertexCover.getText() + " creada exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        graphManagement.SetVertexAndAdjList(maximoEnArreglo(Vertices) + 1);

        for (int i = 0; i < Aristas.size(); i++) {
            graphManagement.addEdge(Aristas.get(i).getVertice1(), Aristas.get(i).getVertice2());
        }

        long startTime = System.nanoTime();
        VertexCover();
        long estimatedTime = System.nanoTime() - startTime;

        String TiempoTranscurrido = Long.toString(estimatedTime) + " milisegundos";

        jl_timeElapsed_VertexCover.setText(TiempoTranscurrido);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Node n = KCgraph.addNode(jt_Vertice_color.getText());
        n.addAttribute("ui.label", jt_Vertice_color.getText());

        colorVertices.add(Integer.parseInt(jt_Vertice_color.getText()));

        JOptionPane.showMessageDialog(jd_kcoloreabilidad, "Nodo " + jt_Vertice_color.getText() + " creado exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Edge e = KCgraph.addEdge(jt_Vertice1_color.getText() + jt_Vertice2_color.getText(), jt_Vertice1_color.getText(), jt_Vertice2_color.getText());
        e.addAttribute("ui.label", jt_Vertice1_color.getText() + jt_Vertice2_color.getText());

        Arista nuevaArista = new Arista(jt_Vertice1_color.getText() + jt_Vertice2_color.getText(), Integer.parseInt(jt_Vertice1_color.getText()), Integer.parseInt(jt_Vertice2_color.getText()));
        colorAristas.add(nuevaArista);

        JOptionPane.showMessageDialog(jd_kcoloreabilidad, "Arista " + jt_Vertice1_color.getText() + jt_Vertice2_color.getText() + " creada exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        Grafo manage_color = new Grafo(0);
        manage_color.SetVertexAndAdjList(maximoEnArreglo(colorVertices) + 1);

        for (int i = 0; i < colorAristas.size(); i++) {
            manage_color.addEdge(colorAristas.get(i).getVertice1(), colorAristas.get(i).getVertice2());
        }

        long startTime = System.nanoTime();
        int[] result = manage_color.greedyColoring();
        for (int i = 0; i < KCgraph.getNodeCount(); i++) {
            KCgraph.getNode(i).addAttribute("ui.style", "size: 20px;");
            System.out.println(result[i + 1]);
            switch (result[i + 1]) {
                case 0:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: red;");
                    break;
                case 1:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: green;");
                    break;
                case 2:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: blue;");
                    break;
                case 3:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: orange;");
                    break;
                case 4:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: purple;");
                    break;
                case 5:
                    KCgraph.getNode(i).addAttribute("ui.style", "fill-color: yellow;");
                    break;
            }

        }
        long estimatedTime = System.nanoTime() - startTime;

        String TiempoTranscurrido = Long.toString(estimatedTime) + " milisegundos";

        jl_timeElapsed_color.setText(TiempoTranscurrido);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jb_ColoreabilidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_ColoreabilidadMouseClicked
        jd_kcoloreabilidad.setModal(true);
        jd_kcoloreabilidad.pack();
        jd_kcoloreabilidad.setLocationRelativeTo(this);
        jd_kcoloreabilidad.setVisible(true);
    }//GEN-LAST:event_jb_ColoreabilidadMouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Node n = tspGraph.addNode(Integer.toString(tspVertices.size() + 1));
        n.addAttribute("ui.label", Integer.toString(tspVertices.size() + 1));

        tspVertices.add(tspVertices.size());

        JOptionPane.showMessageDialog(jd_tsp, "Nodo " + Integer.toString(tspVertices.size()) + " creado exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Edge e = tspGraph.addEdge("Arista: " + tspAristas.size() + " Peso: " + jt_peso_tsp.getText(), jt_Vertice1_tsp.getText(), jt_Vertice2_tsp.getText());
        e.addAttribute("ui.label", jt_peso_tsp.getText());

        Arista nuevaArista = new Arista(jt_peso_tsp.getText(), Integer.parseInt(jt_Vertice1_tsp.getText()), Integer.parseInt(jt_Vertice2_tsp.getText()));
        nuevaArista.setPeso(Integer.parseInt(jt_peso_tsp.getText()));
        tspAristas.add(nuevaArista);

        JOptionPane.showMessageDialog(jd_tsp, "Arista " + jt_Vertice1_tsp.getText() + jt_Vertice2_tsp.getText() + " creada exitosamente", "OPERACION EXITOSA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        int[][] matrix = listToMatrix(tspAristas, tspVertices.size());
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix.length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println("");
        }
        TSPNearestNeighbour TSP = new TSPNearestNeighbour();
        ArrayList<Integer> getList = TSP.tsp(matrix);
        for (int i = 0; i < getList.size(); i++) {
            System.out.println(getList.get(i));
        }
        tspVertices = new ArrayList();
        tspVertices = getList;
        ArrayList<Arista> nuevasAristas = new ArrayList();
        for (int i = 0; i < tspAristas.size(); i++) {
            for (int j = 0; j < getList.size(); j++) {
                if (j != getList.size() - 1) {
                    if (tspAristas.get(i).Vertice1 == getList.get(j) || tspAristas.get(i).Vertice1 == getList.get(j + 1)) {
                        if (tspAristas.get(i).Vertice2 == getList.get(j) || tspAristas.get(i).Vertice2 == getList.get(j + 1)) {
                            nuevasAristas.add(tspAristas.get(i));
                        }
                    }
                } else {
                    if (tspAristas.get(i).Vertice1 == getList.get(j) || tspAristas.get(i).Vertice1 == getList.get(0)) {
                        if (tspAristas.get(i).Vertice2 == getList.get(j) || tspAristas.get(i).Vertice2 == getList.get(0)) {
                            nuevasAristas.add(tspAristas.get(i));
                        }
                    }

                }

            }
        }

        for (int i = 0; i < nuevasAristas.size(); i++) {
            System.out.println(nuevasAristas.get(i).Vertice1 + " ----" + nuevasAristas.get(i).peso + "-------" + nuevasAristas.get(i).Vertice2);
        }

        tspAristas = nuevasAristas;
        tspGraph.clear();

        for (int i = 0; i < tspVertices.size(); i++) {
            Node n = tspGraph.addNode(Integer.toString(tspVertices.get(i)));
            n.addAttribute("ui.label", Integer.toString(tspVertices.get(i)));
        }

        for (int i = 0; i < tspAristas.size(); i++) {
            Edge e = tspGraph.addEdge("Arista: " + i + " Peso: " + tspAristas.get(i).peso, Integer.toString(tspAristas.get(i).Vertice1), Integer.toString(tspAristas.get(i).Vertice2));
            e.addAttribute("ui.label", Integer.toString(tspAristas.get(i).peso));
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jb_tspMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_tspMouseClicked
        jd_tsp.setModal(true);
        jd_tsp.pack();
        jd_tsp.setLocationRelativeTo(this);
        jd_tsp.setVisible(true);
    }//GEN-LAST:event_jb_tspMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_Coloreabilidad;
    private javax.swing.JButton jb_Knapsack;
    private javax.swing.JButton jb_VertexCover;
    private javax.swing.JButton jb_tsp;
    private javax.swing.JDialog jd_Knapsack;
    private javax.swing.JDialog jd_VertexCover;
    private javax.swing.JDialog jd_kcoloreabilidad;
    private javax.swing.JDialog jd_tsp;
    private javax.swing.JLabel jl_SetImage;
    private javax.swing.JLabel jl_timeElapsed_Knapsack;
    private javax.swing.JLabel jl_timeElapsed_VertexCover;
    private javax.swing.JLabel jl_timeElapsed_color;
    private javax.swing.JLabel jl_timeElapsed_color1;
    private javax.swing.JPanel jp_showGraph;
    private javax.swing.JPanel jp_showGraph1;
    private javax.swing.JPanel jp_showGraph3;
    private javax.swing.JTextField jt_Vertice1_VertexCover;
    private javax.swing.JTextField jt_Vertice1_color;
    private javax.swing.JTextField jt_Vertice1_tsp;
    private javax.swing.JTextField jt_Vertice2_VertexCover;
    private javax.swing.JTextField jt_Vertice2_color;
    private javax.swing.JTextField jt_Vertice2_tsp;
    private javax.swing.JTextField jt_Vertice_VertexCover;
    private javax.swing.JTextField jt_Vertice_color;
    private javax.swing.JTextField jt_capacidadMochilas;
    private javax.swing.JTextField jt_pesoKnapsack;
    private javax.swing.JTextField jt_peso_tsp;
    private javax.swing.JTextField jt_valorKnapsack;
    private javax.swing.JTextArea jta_ValoresIngresados;
    // End of variables declaration//GEN-END:variables
    String historialAlgoritmo = "";

    /*Knapsack*/
    ArrayList Valores = new ArrayList();
    ArrayList Pesos = new ArrayList();
    int ValoresDistintos = 0;
    int CapacidadMochilas = 0;
    int ValoresIguales = 0;
    int[][] ValoresMochilas;

    String ValoresVisibles = "";
    /*Knapsack*/
    /*K-Coloreabilidad */
    Graph KCgraph = new SingleGraph("K-coloreabilidad");
    ArrayList colorVertices = new ArrayList();
    ArrayList<Arista> colorAristas = new ArrayList();
    /*K-Coloreabilidad */
// TSP
    Graph tspGraph = new SingleGraph("TSP");
    ArrayList<Integer> tspVertices = new ArrayList();
    ArrayList<Arista> tspAristas = new ArrayList();
// TSP
 /*Vertex Cover*/
    Graph graph = new SingleGraph("Vertex Cover");
    Grafo graphManagement = new Grafo(0);
    ArrayList<Arista> Aristas = new ArrayList();
    ArrayList Vertices = new ArrayList();
    Viewer viewer;

    /*Vertex Cover*/
    public void Knapsack() {
        CapacidadMochilas = Integer.parseInt(jt_capacidadMochilas.getText());

        ValoresDistintos = Valores.size();
        ValoresMochilas = new int[ValoresDistintos + 1][CapacidadMochilas + 1];
        ArrayList Resultante = new ArrayList();

        for (int i = 0; i <= ValoresDistintos; i++) {
            for (int j = 0; j <= CapacidadMochilas; j++) {
                if (i == 0 || j == 0) {
                    ValoresMochilas[i][j] = 0;
                    Resultante.add(ValoresMochilas[i][j]);

                } else if ((int) Pesos.get(i - 1) <= j) {
                    ValoresMochilas[i][j] = maximo((int) Valores.get(i - 1) + ValoresMochilas[i - 1][j - (int) Pesos.get(i - 1)], ValoresMochilas[i - 1][j]);
                    Resultante.add(ValoresMochilas[i][j]);

                } else {
                    ValoresMochilas[i][j] = ValoresMochilas[i - 1][j];
                    Resultante.add(ValoresMochilas[i][j]);
                }
            }
        }

        ValoresVisibles += "--------------------------------------------------------" + "\n"
                + "El valor maximo posible es: " + ValoresMochilas[ValoresDistintos][CapacidadMochilas];
    }

    public int maximo(int a, int b) {

        int maximo = 0;

        if (a > b) {
            maximo = a;
        } else {
            maximo = b;
        }

        return maximo;
    }

    public boolean verticeExistente(String Vertice) {
        boolean Existente = false;

        for (int i = 0; i < Vertices.size(); i++) {
            if (Vertices.get(i).equals(Vertice)) {
                Existente = true;
            }
        }

        return Existente;
    }

    public boolean aristaExistente(String Arista) {
        boolean Existente = false;

        for (int i = 0; i < Aristas.size(); i++) {
            if (Aristas.get(i).getNombre().equals(Arista)) {
                Existente = true;
            }
        }

        return Existente;
    }

    void BFS(int nodo, boolean visited[]) {

        LinkedList<Integer> listaNodos = new LinkedList<Integer>();
        listaNodos.add(nodo);
        while (!listaNodos.isEmpty()) {
            nodo = listaNodos.poll();

            //get all the children of this node
            ListIterator<Integer> nodoActual = (graphManagement.getListaAdyacencia())[nodo].listIterator();
            while (nodoActual.hasNext()) {
                int nodoAdyacente = nodoActual.next();
                if (!visited[nodo] && !visited[nodoAdyacente]) {
                    visited[nodoAdyacente] = true;
                    listaNodos.add(nodoAdyacente);
                }
            }
        }
    }

    void VertexCover() {
        boolean visited[] = new boolean[graphManagement.getVertices()];

        for (int i = 0; i < graphManagement.getVertices(); i++) {
            if (!visited[i]) {
                BFS(i, visited);
            }
        }

        while (graph.getNodeCount() > 0) {
            graph.removeNode(0);
        }

        for (int i = 0; i < graphManagement.getVertices(); i++) {
            if (!visited[i]) {
                Node n = graph.addNode(Integer.toString(i));
                n.addAttribute("ui.label", Integer.toString(i));
            }
        }
    }

    public int maximoEnArreglo(ArrayList Vertices) {
        int max = -1;

        for (int i = 0; i < Vertices.size(); i++) {
            if ((int) Vertices.get(i) >= max) {
                max = (int) Vertices.get(i);
            }
        }

        return max;
    }

    public int[][] listToMatrix(ArrayList<Arista> aristas, int size) {
        int[][] matrix = new int[size + 1][size + 1];
        for (int i = 1; i <= size; i++) {
            for (int j = 1; j <= size; j++) {
                matrix[i][j] = 0;
            }
        }

        for (int i = 0; i < aristas.size(); i++) {
            matrix[aristas.get(i).Vertice1][aristas.get(i).Vertice2] = aristas.get(i).peso;
            matrix[aristas.get(i).Vertice2][aristas.get(i).Vertice1] = aristas.get(i).peso;
        }

        return matrix;
    }
}
